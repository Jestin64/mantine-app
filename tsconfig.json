{
  "compilerOptions": {
    "target": "esnext",                          /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "module": "esnext",                          /* Specify what module code is generated. */
    "moduleResolution": "node",                  /* Specify how TypeScript looks up a file from a given module specifier. */
    "strict": true,           
    "noImplicitAny": false,                   /* Enable all strict type-checking options. */
    "esModuleInterop": true,                     /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "skipLibCheck": true,                        /* Skip type checking all .d.ts files. */
    "forceConsistentCasingInFileNames": true,    /* Ensure that casing is correct in imports. */
    "jsx": "preserve",                           /* Specify what JSX code is generated. */
    "isolatedModules": true,                     /* Ensure that each file can be safely transpiled without relying on other imports. */
    "resolveJsonModule": true,                   /* Enable importing .json files. */
    "allowSyntheticDefaultImports": true,        /* Allow 'import x from y' when a module doesn't have a default export. */
    "lib": ["esnext", "dom"]                     /* Specify a set of bundled library declaration files that describe the target runtime environment. */
  },
  "include": ["src"],                            /* Specify the root folder within your source files. */
  "exclude": ["node_modules", "dist"]            /* Exclude folders from the compilation. */
}